.related {

    // Make some sort of grid here... Flex or grid? 
    // I think below a certain width the 'covers' simply expand to the width (e.g. a small mobile, otherwise, they're 50%, or max of say N pixels

    // all the list items are the same ratio - around 129:198 apparently - https://www.penguin.co.uk/company/work-with-us/cover-design-award/template-jargon-buster#:~:text=For%20both%20the%20Penguin%20and,270mm%20wide%20by%20198mm%20tall.

    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 2rem;

    /* we have class types for the cover, defined in the yaml - they are: 
        layout types: 
            `classic` - words only
        colour types:
            `literature` - orangey & bone
            `experiments` - lilac-ish
    */

    li.list-item {

        &.item-section,
        &.item-page {

            width: var(--cover-w);
            height: var(--cover-h);

            border-radius: 0.4rem;
            box-shadow: 4px 1px 2px 0px #e9ddc9, 3px 4px 9px 0px #222C, inset 0px 0px 4px 0px #2226;

            display: grid;
            // define grid shape
            grid-template-columns: [left] 3.5rem [pic-small-left] 3.5rem [middle-start] 3.75rem [middle] 3.75rem [middle-end] 3.5rem [pic-small-right] 3.5rem [right];
            grid-template-rows: [top] 2rem [bar-1] 4.5rem [bar-2] 3rem [pic-large-start] 3.5rem [pic-small-start] 7.25rem [pic-center] 7.25rem [pic-small-end] 3.5rem [pic-large-end] 2rem [bottom];
        }

        &.item-section {
            &::before {
                content: "";
                padding: 100px;
                width: var(--cover-w);
                height: var(--cover-h);
                display: block;
                transform: matrix(1.00, -0.07, 0.07, 1.00, 3, 7);
                z-index: -1;
                border-radius: 0.4rem;
                box-shadow: 4px 1px 2px 0px #e9ddc9, 3px 4px 9px 0px #222C, inset 0px 0px 4px 0px #2226;
            }

            &:nth-child(even) {
                &::before {
                    transform: matrix(1.00, 0.03, -0.03, 1.00, 3, 7);
                }
            }

            // what HUGO calls a list / index
            // background:green;                   
        }

        &.item-page {
            background: var(--color-bone);
            transform: matrix(1.00, -0.01, 0.01, 1.00, 0, 0);

            &:nth-child(even) {
                transform: matrix(1.00, 0.02, -0.02, 1.00, -3, 1);
            }

            // what HuGO calls a page
            // background:blue
        }

        .title {
            a {
                text-decoration: none;
            }
        }

        &.item-section,
        &.item-page {
        .title {
            grid-column: left / span right;
            grid-row: pic-small-start / span pic-center;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            text-transform: uppercase;
            font-size: 1.8rem;
            align-self: end;
            padding: 0;

            a {
                align-self: flex-end;
                padding: 1rem 0;
                margin: 0 1rem;
                border-bottom: 0.20rem solid #2226;
                text-align: center;
            }

        }

            .subtitle {
                grid-column: left / span right;
                grid-row: pic-center / span pic-small-end;
                display: flex;
                justify-content: center;

                span {
                    align-self: flex-start;
                    padding: 1rem;
                    font-size: 1.4rem;
                    text-align: center;
                }
            }

            .author {
                grid-column: left / span right;
                grid-row: bar-2 / span pic-large-start;
                display: flex;
                justify-content: center;
            }

            .author:empty {
                background: url("/assets/chicken_logo_original.svg") no-repeat center center;
            }

            .subheading {
                grid-column: pic-small-left / span pic-small-right;
                grid-row: pic-small-end / span pic-large-end;
                font-size: 1rem;
                text-align: center;

                span {
                    line-height: 4rem;
                }
            }

            .cover-image {
                display: none;
            }


        }
    }

}